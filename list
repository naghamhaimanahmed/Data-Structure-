#include<iostream>
using namespace std;
#define cap 10
class List {
	int size = 0;
	int data[cap];
    int top=0;
public:
	bool pushback(int val) {
		if (top>=cap) {
			cout << "list is full " << endl;
			return false;
		}
		else {
            top++;
            data[size] = val;
			size++;
			return true;
		}
	}
bool pushfront(int val) {
		if (size>=cap) {
			cout << "list is full " << endl;
			return false;
		}
		else {
			size++;
           
          for(int i=size;i>=0;i--)
            {
              data[i+1]=data[i];
            }
         data[0]=val;
			return true;
		}
	}
	bool remove(int pos) {
		if ((pos-1)<0) {
			cout << "list empty" << endl;
			return false;
	   }
		else {
          cout <<"the "<<pos<<"th element has already removed & its val = "<< data[pos-1]<<endl;
          
          for(int i=pos-1;i<size-1;i++){
            data[i]=data[i+1];
          }
          top--;
          size--;
          return true;	
		}
	}
bool set(int pos,int val){
  if ((pos-1)<0||(pos-1)>size) {
			cout << "this opration can not be done" << endl;
     return 0;
     }
else{
  data[pos-1]=val;
  cout<< "data of postion "<<pos<<"="<<val<<endl;
  return true;
  }
  }
    int length(){
      cout<<size<<endl;
      return size;
    }
 int get(int pos){
   if ((pos-1)<0||(pos-1)>=size) {
			cout << "there is no element" << endl;
     return 0;
     }
   else{
   cout<<data[pos-1]<<endl;
   return data[pos-1];
     }
 }


int show(){
  for(int i=0;i<size;i++)
            {
              cout<<data[i]<<endl;
            }
  return true;
}
};
int main() {
  List l;
  l.pushback(1);
  l.pushback(123);
  l.pushback(12);
  l.pushback(1234);
  l.pushback(897);
l.show();
  l.remove(2);
l.show();
  l.remove(-3);
  l.length();
  l.get(4);
  l.get(3);
  l.set(1,524);
  l.set(5,887);
  l.pushfront(6);
  l.pushfront(9);
  l.show();
           
}
